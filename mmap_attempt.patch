Index: spufifo.c
===================================================================
--- spufifo.c	(revision 774)
+++ spufifo.c	(working copy)
@@ -10,6 +10,9 @@
 #include <spu_mfcio.h>
 #include "fifo.h"
 
+//#define _SYS_MMAN_H
+//#define __USE_MISC
+//#include ".mman.h"
 
 SPU_CONTROL control __CACHE_ALIGNED__;
 
@@ -29,6 +32,10 @@
 	if (fifo_size>0 && control.fifo_start == 0UL)
 		return 1;
 
+//	void* big_buffer = mmap((void*)0, 16*1024*1024, PROT_READ|PROT_WRITE,
+//		MAP_ANONYMOUS, -1, 0);
+//	printf("Allocated buffer at address %llx\n", big_buffer);
+
 //	printf("Allocated FIFO of %d bytes at %lx ctrl %lx\n",
 //		fifo_size, control.fifo_start, &control);
 
Index: Makefile
===================================================================
--- Makefile	(revision 771)
+++ Makefile	(working copy)
@@ -42,7 +42,7 @@
 	gvim -p Makefile *.c *.h
 
 ppufifo.o: Makefile .gen
-spufifo.0: Makefile .gen
+spufifo.0: Makefile .gen .mman.h
 
 gen_spu_command_defs.h: .gen
 gen_spu_command_exts.h: .gen
@@ -51,13 +51,17 @@
 	perl importdefs.pl $(GENSOURCES)
 	touch .gen
 
+.mman.h:
+	cp /usr/include/bits/mman.h .mman.h
+
 ###############################################################################
 #
 # useful targets
 
-depend:
+depend: .mman.h
 	@makedepend -I/usr/include/python2.4/ -I/usr/lib/gcc/spu/4.0.2/include/  -I. $(PPU_SRCS) -DUSERLAND_$(USERLAND)_BITS
 	@makedepend -a -I/usr/lib/gcc/spu/4.0.2/include/ -I. -o.0 $(SPU_SRCS) -DUSERLAND_$(USERLAND)_BITS
+# -D_SYS_MMAN_H
 	@for i in $(SPU_OBJS) ; do grep $$i:.*spuregs.h Makefile >/dev/null || (echo ERROR: $$i does not refer to spuregs.h && false) ; done
 
 clean:
@@ -191,7 +195,7 @@
 spufifo.0: /usr/lib/gcc/spu/4.0.2/include/spu_mfcio.h
 spufifo.0: /usr/lib/gcc/spu/4.0.2/include/spu_intrinsics.h
 spufifo.0: /usr/lib/gcc/spu/4.0.2/include/spu_internals.h fifo.h
-spufifo.0: gen_spu_command_defs.h gen_spu_command_exts.h
+spufifo.0: gen_spu_command_defs.h .mman.h gen_spu_command_exts.h
 spufifo.0: gen_spu_command_table.h
 decode.0: /usr/lib/gcc/spu/4.0.2/include/spu_mfcio.h
 decode.0: /usr/lib/gcc/spu/4.0.2/include/spu_intrinsics.h
